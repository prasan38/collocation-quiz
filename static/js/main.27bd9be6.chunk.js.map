{"version":3,"sources":["logo.svg","ModalComponent.js","CardComponent.js","Source/Data.js","QuizGame.js","App.js","reportWebVitals.js","index.js"],"names":["ModalComponent","showModal","setShowModal","count","setCount","text","handleClose","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","Button","variant","onClick","CardComponent","data","correctAnsCount","setCorrectAnsCount","useState","answered","setAnswered","modalText","setModalText","handleClick","e","clickedAns","answer","Card","word","Text","options","optionVal","QuizGame","className","length","href","App","Container","fluid","Navbar","bg","expand","Brand","Toggle","aria-controls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27bd9be6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nfunction ModalComponent({ showModal, setShowModal, count, setCount, text }) {\n\n\n    const handleClose = () => {\n        setShowModal(false)\n        setCount(count + 1)\n    };\n\n\n    return (\n        <Modal\n            show={showModal}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Your Result</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {text}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Next\n          </Button>\n\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default ModalComponent\n","import React, { useState } from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\nimport ModalComponent from './ModalComponent';\n\nfunction CardComponent({ data, count, setCount, correctAnsCount, setCorrectAnsCount }) {\n\n    const [answered, setAnswered] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [modalText, setModalText] = useState('');\n\n\n    const handleClick = (e, clickedAns, answer) => {\n\n        if (clickedAns === answer) {\n            setModalText(\"Correct\")\n            setCorrectAnsCount(correctAnsCount + 1)\n\n        } else {\n            setModalText(\"Incorrect! The correct answer is \" + answer)\n\n        }\n        setShowModal(true);\n        setAnswered(true);\n\n    }\n\n    return (\n        <>\n            {answered && <ModalComponent showModal={showModal} setShowModal={setShowModal} count={count} setCount={setCount} text={modalText} />}\n            <Card>\n                <Card.Body>\n                    <Card.Title>{data.word}</Card.Title>\n                    <Card.Text>\n                        <Button\n                            variant=\"secondary\"\n                            onClick={e => handleClick(e, data.options[0].optionVal, data.answer)}>\n                            {data.options[0].optionVal}\n                        </Button>\n                        <Button\n                            variant=\"secondary\"\n                            onClick={e => handleClick(e, data.options[1].optionVal, data.answer)}>\n                            {data.options[1].optionVal}\n                        </Button>\n                        <Button\n                            variant=\"secondary\"\n                            onClick={e => handleClick(e, data.options[2].optionVal, data.answer)}>\n                            {data.options[2].optionVal}\n                        </Button>\n                        <Button\n                            variant=\"secondary\"\n                            onClick={e => handleClick(e, data.options[3].optionVal, data.answer)}>\n                            {data.options[3].optionVal}\n                        </Button>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n            <hr />\n        </>\n    )\n}\n\nexport default CardComponent\n","const data = [\n    {\n        \"word\": \"accurate\",\n        \"answer\": \"measurement\",\n        \"options\": [\n            {\n                \"optionVal\": \"behaviour\"\n            },\n            {\n                \"optionVal\": \"participation\"\n            },\n            {\n                \"optionVal\": \"measurement\"\n            },\n            {\n                \"optionVal\": \"objective\"\n            }\n        ]\n    },\n    {\n        \"word\": \"accept\",\n        \"answer\": \"concept\",\n        \"options\": [\n            {\n                \"optionVal\": \"concept\"\n            },\n            {\n                \"optionVal\": \"career\"\n            },\n            {\n                \"optionVal\": \"participation\"\n            },\n            {\n                \"optionVal\": \"responsibility\"\n            }\n        ]\n    },\n    {\n        \"word\": \"basic\",\n        \"answer\": \"element\",\n        \"options\": [\n            {\n                \"optionVal\": \"achievement\"\n            },\n            {\n                \"optionVal\": \"goal\"\n            },\n            {\n                \"optionVal\": \"measurement\"\n            },\n            {\n                \"optionVal\": \"element\"\n            }\n        ]\n    },\n    {\n        \"word\": \"achieve\",\n        \"answer\": \"objective\",\n        \"options\": [\n            {\n                \"optionVal\": \"achievement\"\n            },\n            {\n                \"optionVal\": \"behaviour\"\n            },\n            {\n                \"optionVal\": \"career\"\n            },\n            {\n                \"optionVal\": \"objective\"\n            }\n        ]\n    },\n    {\n        \"word\": \"active\",\n        \"answer\": \"participation\",\n        \"options\": [\n            {\n                \"optionVal\": \"element\"\n            },\n            {\n                \"optionVal\": \"participation\"\n            },\n            {\n                \"optionVal\": \"responsibility\"\n            },\n            {\n                \"optionVal\": \"concept\"\n            }\n        ]\n    },\n    {\n        \"word\": \"academic\",\n        \"answer\": \"institution\",\n        \"options\": [\n            {\n                \"optionVal\": \"objective\"\n            },\n            {\n                \"optionVal\": \"description\"\n            },\n            {\n                \"optionVal\": \"component\"\n            },\n            {\n                \"optionVal\": \"institution\"\n            }\n        ]\n    },\n    {\n        \"word\": \"acquire\",\n        \"answer\": \"knowledge\",\n        \"options\": [\n            {\n                \"optionVal\": \"responsibility\"\n            },\n            {\n                \"optionVal\": \"knowledge\"\n            },\n            {\n                \"optionVal\": \"information\"\n            },\n            {\n                \"optionVal\": \"goal\"\n            }\n        ]\n    },\n    {\n        \"word\": \"accept\",\n        \"answer\": \"responsibility\",\n        \"options\": [\n            {\n                \"optionVal\": \"career\"\n            },\n            {\n                \"optionVal\": \"description\"\n            },\n            {\n                \"optionVal\": \"responsibility\"\n            },\n            {\n                \"optionVal\": \"information\"\n            }\n        ]\n    },\n    {\n        \"word\": \"acceptable\",\n        \"answer\": \"behaviour\",\n        \"options\": [\n            {\n                \"optionVal\": \"goal\"\n            },\n            {\n                \"optionVal\": \"measurement\"\n            },\n            {\n                \"optionVal\": \"behaviour\"\n            },\n            {\n                \"optionVal\": \"achievement\"\n            }\n        ]\n    }\n];\n\nexport default data;","import React, { useState } from 'react'\nimport CardComponent from './CardComponent'\nimport data from './Source/Data'\n\n\nfunction QuizGame() {\n\n    const [count, setCount] = useState(1);\n    const [correctAnsCount, setCorrectAnsCount] = useState(0);\n\n    return (\n        <>\n            <div className=\"score-info\">\n                <h2>Attempted {(count > data.length) ? data.length : count} / {data.length} Questions: Score: {correctAnsCount}</h2>\n            </div>\n\n            {count <= data.length ? <CardComponent data={data[count - 1]}\n                count={count}\n                setCount={setCount}\n                correctAnsCount={correctAnsCount}\n                setCorrectAnsCount={setCorrectAnsCount} />\n                :\n                <a href=\"/\">Play Again</a>\n            }\n\n\n\n        </>\n    )\n}\n\nexport default QuizGame\n","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container, Navbar, Nav } from 'react-bootstrap';\nimport QuizGame from './QuizGame';\n\nfunction App() {\n  return (\n    <Container fluid>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">QUIZ</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n      </Navbar>\n      <QuizGame />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}